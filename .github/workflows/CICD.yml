name: CI/CD Pipeline

on:
    workflow_dispatch:

jobs:
    # Run Unit/API tests
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Install modules
              run: npm i
            - name: Run tests
              env:
                  DB_CONNECTION_STRING: "mongodb://test:27017"
              working-directory: ./packages/api
              run: npm test
    # Build frontend and API in prod mode
    # into a docker image
    # push image to DigitalOcean registry
    # Won't run if unit tests fail
    build_and_push:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the repo
              uses: actions/checkout@v2
            - name: Build and tag API
              working-directory: ./packages/api
              run: docker build -t registry.digitalocean.com/rafasdc/95545-api:$(echo $GITHUB_SHA | head -c7) .
            - name: Build and tag frontend
              env:
                  VITE_API_BASE_URL: ${{ secrets.API_URL }}
              working-directory: ./packages/frontend
              run: docker build -t registry.digitalocean.com/rafasdc/95545-frontend:$(echo $GITHUB_SHA | head -c7) .
            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
            - name: Log in to DO Container Registry
              run: doctl registry login --expiry-seconds 600
            - name: Push API image to DO Container Registry
              run: docker push registry.digitalocean.com/rafasdc/95545-api:$(echo $GITHUB_SHA | head -c7)
            - name: Push frontend image to DO Container Registry
              run: docker push registry.digitalocean.com/rafasdc/95545-frontend:$(echo $GITHUB_SHA | head -c7)
    # Configures DigitalOcean Apps to use
    # newly build image and trigger a deployment
    configure_and_trigger_deployment:
        needs: build_and_push
        runs-on: ubuntu-latest
        steps:
            - name: Generate GITHUB_SHA
              id: github-sha
              shell: bash
              run: |
                SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
                echo "::set-output name=sha::$SHORT_SHA"
            - name: Configure and Trigger deployment
              uses: digitalocean/app_action@main
              with:
                  app_name: echocatchtours
                  token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
                  images: '[{"name": "frontend","repository": "registry.digitalocean.com/rafasdc/95545-frontend","tag": "${{steps.github-sha.outputs.sha}}"},{"name": "api","repository": "registry.digitalocean.com/rafasdc/95545-api","tag": "${{steps.github-sha.outputs.sha}}"}]'
